# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  BASE_URL: 'http://dummy-server'
  NODE_ENV: 'test'
  PORT: '1111'
  LOG_LEVEL: 'info'
  DATABASE_URL: 'postgres://test_user:password123@localhost:5432/nodeTemplateTesting'
  ACCESS_TOKEN_SECRET: 'secret'
  REFRESH_TOKEN_SECRET: 'secret'
  ACCESS_TOKEN_EXPIRES_IN: '1d'
  REFRESH_TOKEN_EXPIRES_IN: '1d'
  EMAIL_FROM: 'test-client'
  SMTP_USER: 'test'
  SMTP_PASSWORD: 'test'
  SMTP_HOST: 'test'
  SMTP_PORT: '1111'
  APP_NAME: 'APPNAME'
  REDIS_HOST: 'redis-server'
  REDIS_PASSWORD: 'my-password'
  REDIS_PORT: '6379'
  REDIS_USERNAME: 'default'
  JOBS_RETENTION_HOURS: '24'
  OTP_EXPIRATION_MINUTES: '15'
  ENABLE_RATE_LIMIT: 'true'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis-server:
        image: bitnami/redis:latest
        env:
          - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
          - ALLOW_EMPTY_PASSWORD=false
          - REDIS_PASSWORD=my-password
          - REDIS_USERNAME=default
      postgres-service:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: password123
          POSTGRES_DB: nodeTemplateTesting

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.9.0
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0
          cache: 'npm'
      - name: Install libraries
        run: npm ci --prefer-offline
      - name: Run linter
        run: npm run lint
      - name: Run test
        run: npm test
      - name: Run build
        run: npm run build
